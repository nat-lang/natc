class IterationProtocolError extends Error {}

class Iterator {
  init(seq, start, end) => {
    this.seq = seq;
    this.idx = start;
    this.end = end;
  }

  more() => this.idx != this.end;

  next() => {
    let value = this.seq[this.idx];
    this.idx = this.idx + 1;
    return value;
  }

  __len__() => this.end - this.idx;
}

let iter = (object) => {
  if (vType(object) != OInstance)
    throw IterationProtocolError("Only objects can be iterated over.");

  if (object.has("__iter__")) return object.__iter__();

  throw IterationProtocolError("Must define an '__iter__' method to iterate.");
};
