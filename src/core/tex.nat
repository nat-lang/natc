class Document {}

let newline = "
";

class TexDocument {
  init(documentClass, packages, blocks) => {
    this.packages = packages;
    this.documentClass = documentClass;
    this.blocks = blocks;
  }

  add(block) => this.blocks.push(block);

  renderPreamble() => "
\documentclass{#{this.documentClass}}
\usepackage{#{join(this.packages, ",")}}
  ";

  renderBlocks() => join([block.tex() | block in this.blocks], newline + newline);

  renderBody() => "
\begin{document}
  #{this.renderBlocks()}
\end{document}
  ";

  render() => "#{this.renderPreamble()}
#{this.renderBody()}
  ";
}

class TreeDocument extends TexDocument {
  init(blocks) => {
    super.init("standalone", ["amsmath", "tikz", "tikz-qtree"], blocks);
  }

  renderPreamble() => "
#{super.renderPreamble()}
\tikzset{aligned/.style={baseline=(current bounding box.center)}}
\tikzset{every tree node/.style={align=center,anchor=north}}
  ";
}

let typeset = (module: Module) => {
  print module;
  module.__import__();

  let trees = [val.tex() | val in module.values(), val is Tree];

  let z = jsonEncode({"success": true, "data": trees});
  print z;
  return z;
};