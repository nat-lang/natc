
class Map extends Object {
  init(*entries) => {
    for (let i = 0; i < len(entries); i = i + 1) {
      this[entries[i][0]] = entries[i][1];
    }
  }

  // Does each key in [this] map to the same value in [other]?
  subMap(other) => {
    for (key in this.keys()) {
      if (!(key in other)) return false;
      if (other[key] != this[key]) return false;
    }
    return true;
  }

  // Find the first key for which [predicate] is true
  // and return its value.
  find(predicate) => {
    for (key in this.keys()) {
      if (predicate(key)) {
        return this[key];
      }
    }
  }

  __eq__(other) => {
    if (len(this) != len(other)) return false;

    return this.subMap(other) and other.subMap(this);
  }
}
