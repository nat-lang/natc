class ASTNode extends Tree {
  addStmt(stmt) => {
    let child = ASTStmt();
    child.addData(stmt);

    this.children.add(child);
  }

  opClosure() => ASTClosure();
  opConstant(value) => ASTLiteral(value);
}

class ASTStmt extends ASTNode {}
class ASTReturnStmt extends ASTStmt {
  init(value) => {
    super.init();
    this.data = value;
  }
}

class ASTExpr extends ASTNode {}
class ASTLiteral extends ASTExpr {
  init(value) => {
    super.init();
    this.data = value;
  }
}

class ASTApp extends ASTExpr {}
class ASTBlock extends ASTExpr {}

class ASTClosure extends ASTExpr {
  opReturn(expr) => {
    this.children.add(ASTReturnStmt(expr));
    return this;
  }
}