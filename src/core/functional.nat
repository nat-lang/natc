
let compose = (f, g) => x => f(g(x));

let negate = f => (x, y) => !f(x, y);

let zip = (x, y) => {
  if (len(x) != len(y))
    throw Error("Can't zip sequences of different length.");
  
  let seq = [];

  for (let i = 0; i < len(x); i = i + 1) {
    seq.push((x[i], y[i]));
  }

  return seq;
};

let unzip = x => {
  let left = x.map(y => y[0]), right = x.map(y => y[1]);
  return (left, right);
};