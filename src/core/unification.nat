
let var = x => vType(x) == OVariable;

let unifyPair = (a, b) => {
  let vA = a[0], vB = b[0],
      tA = a[1], tB = b[1];

  if (tA == undefined) {
    if (var(vA))
      return true;
    return vA == vB;
  }

  return tA == tB;
};

let unify = (pattern, scrutinee) => {
  if (len(pattern) != len(scrutinee)) return false;

  let typedScrutinee = [(x, SimpleTypeSystem.type(x)) | x in scrutinee];

  return zip(pattern, typedScrutinee).all(pair => unifyPair(..pair));
};