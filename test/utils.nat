let begin = () => {
  let start = clock();
  return name => {
    let end = clock() - start;
    print "#{name} ok (#{end}s)";
  };
};

class AssertionFailure extends Error {}

let assert = condition => {
  if (!condition) throw AssertionFailure("");
};

let typecheck = x => assert(TypeSystem.typecheck(x).success());
let typefail = x => assert(TypeSystem.typecheck(x).failure());
let infix unifies = (x, y) => TypeSystem.newState().unify(
  typify(x) ~ typify(y)
);