// immediate invocation no args.

assert(
  (() => { return 1; })() == 1
);

// immediate invocation args.

assert(
  ((a) => { return a + 1; })(1) == 2
);

// as return values.

let fn = () => {
  return () => { return 1; };
};

assert(fn()() == 1);

// as closures.

let fn = () => {
  let a = 1;

  return (b) => { return a + b; };
};

assert(fn()(1) == 2);

// as arguments.

let compose = (f, g) => {
  return (a) => { return f(g(a)); };
};

let h = compose(
  (a) => { return a + 1; },
  (a) => { return a - 1; }
)(1);

assert(h == 1);
