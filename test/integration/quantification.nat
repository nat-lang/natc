assert(for some (x in [1,2]) x == 2);
assert(!(for some (x in [1,2]) x == 3));

assert(for some (x in [true,false]) x);
assert(for some (x in [true,false]) !x);

assert(for all (x in [1,2]) x == 1 or x == 2);
assert(!(for all (x in [1,2]) x == 1));
assert(!(for all (x in [1,2]) x == 2));

assert(for all (x in [true,false]) x or !x);
assert(!(for all (x in [true,false]) x));
assert(!(for all (x in [true,false]) !x));

assert(for no (x in [1,2,4]) x == 3);
assert(!(for no (x in [1,2,3,4]) x == 3));

let all = p q => for all (x in p) x in q;
let some = p q => for some (x in p) x in q;
let no = p q => for no (x in p) x in q;

assert(all({1,2,3})({1,2,3}));
assert(some({1,2,3})({1,2,3}));
assert(!no({1,2,3})({1,2,3}));

// as statement.

for all (x in [true,false]) x or !x;
for some (x in [true,false]) x or !x; 
for no (x in [true,false]) x or !x; 